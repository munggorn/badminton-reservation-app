import React, { useState } from 'react';const BadmintonReservation = () => {  const [name, setName] = useState('');  const [partyNames, setPartyNames] = useState('');  const [selectedCourt, setSelectedCourt] = useState(null);  const [selectedTime, setSelectedTime] = useState(null);  const [reservations, setReservations] = useState({});  const [hoverInfo, setHoverInfo] = useState(null);  const courts = [1, 2, 3, 4];  const timeSlots = [    '10:00 - 11:30',    '11:30 - 13:00',    '13:00 - 14:30',    '14:30 - 16:00',    '16:00 - 17:30',    '17:30 - 19:00',    '19:00 - 20:30',    '20:30 - 22:00'  ];  const handleReservation = () => {    if (name && partyNames && selectedCourt && selectedTime) {      const newReservation = {        ...reservations,        [`${selectedCourt}-${selectedTime}`]: { name, partyNames }      };      setReservations(newReservation);      setName('');      setPartyNames('');      setSelectedCourt(null);      setSelectedTime(null);    }  };  const isReserved = (court, slot) => {    return reservations[`${court}-${slot}`];  };  const handleCellClick = (court, time) => {    if (!isReserved(court, time)) {      setSelectedCourt(court);      setSelectedTime(time);    }  };  const handleCellHover = (court, slot) => {    const reservation = reservations[`${court}-${slot}`];    if (reservation) {      setHoverInfo({ court, slot, ...reservation });    } else {      setHoverInfo(null);    }  };  return (    <div className="p-4 max-w-4xl mx-auto">      <h1 className="text-2xl font-bold mb-4">Badminton Court Reservation</h1>      <div className="mb-6 grid grid-cols-2 gap-4">        <div>          <label htmlFor="name" className="block mb-2">Your Name:</label>          <input            type="text"            id="name"            value={name}            onChange={(e) => setName(e.target.value)}            className="w-full p-2 border rounded"            required          />        </div>        <div>          <label htmlFor="partyNames" className="block mb-2">Party's Names:</label>          <textarea            id="partyNames"            value={partyNames}            onChange={(e) => setPartyNames(e.target.value)}            className="w-full p-2 border rounded"            rows="3"            required          />        </div>      </div>      <div className="mt-8">        <h2 className="text-xl font-semibold mb-4">Court Availability</h2>        <p className="mb-2">Click on an available slot to select it for reservation. Hover over reserved slots to see details.</p>        <div className="grid grid-cols-5 gap-2">          <div className="font-bold"></div>          {courts.map(court => (            <div key={court} className="font-bold text-center">Court {court}</div>          ))}          {timeSlots.map(slot => (            <React.Fragment key={slot}>              <div className="font-bold text-sm">{slot}</div>              {courts.map(court => (                <div                  key={`${court}-${slot}`}                  className={`p-2 text-center cursor-pointer ${                    isReserved(court, slot)                       ? 'bg-red-300'                       : selectedCourt === court && selectedTime === slot                        ? 'bg-yellow-300'                        : 'bg-green-300 hover:bg-green-400'                  }`}                  onClick={() => handleCellClick(court, slot)}                  onMouseEnter={() => handleCellHover(court, slot)}                  onMouseLeave={() => setHoverInfo(null)}                >                  {isReserved(court, slot) ? 'R' : selectedCourt === court && selectedTime === slot ? 'Selected' : 'A'}                </div>              ))}            </React.Fragment>          ))}        </div>      </div>      {hoverInfo && (        <div className="mt-4 p-4 bg-gray-100 rounded">          <h3 className="font-bold">Reservation Details:</h3>          <p>Court: {hoverInfo.court}</p>          <p>Time: {hoverInfo.slot}</p>          <p>Reserved by: {hoverInfo.name}</p>          <p>Party: {hoverInfo.partyNames}</p>        </div>      )}      <div className="mt-6">        <p className="mb-2">          {selectedCourt && selectedTime             ? `Selected: Court ${selectedCourt} at ${selectedTime}`            : 'Please select a court and time from the visualization above'}        </p>        <button           onClick={handleReservation}           className={`w-full p-2 rounded ${            name && partyNames && selectedCourt && selectedTime              ? 'bg-blue-500 text-white hover:bg-blue-600'              : 'bg-gray-300 text-gray-500 cursor-not-allowed'          }`}          disabled={!(name && partyNames && selectedCourt && selectedTime)}        >          Reserve Court        </button>      </div>    </div>  );};export default BadmintonReservation;